# This file contains a list of the valid permissions that players can
# enable/disable in their chunks to determine what other are allowed to do in
# their claimed chunk(s).
#
# When a user has a flag enabled, it overrides all less specific flag targets
# even when they're disabled. So for example, if a user has some `interact`
# flag specifically enabled/disabled for one of their chunks, it does not
# matter if they have it enabled/disabled for a specific player, unless they
# have the flag as a different value for that player in the specific chunk.
# If all flags are unset, the fallback is determined by the world's protection
# profile file in the `/plugins/ClaimChunk/worlds/` directory.
#
# When specifying included/excluded blocks and entities, you can use either the
# resource name (like `minecraft:dirt`, for example), the Spigot/Bukkit
# name (like `DIRT`), or predefined "classes" (like `@CONTAINER_ENTITIES`)
#
# Class references (preceded by `@`) reference the classes described in:
# /plugins/ClaimChunk/classes.yml
#
# By default, blocks/entities listed in flags will have PROTECTION from other
# players *enabled* when the flag is disabled!
# The `protectWhen` value can be used within each protection type list.
# If set to `ENABLED`, the protections will only be applied once the owner has
# enabled the flag for their claim(s).
# For an example, see the `disablePvp` flag below, which protects player
# entities once the flag has been enabled, rather than once disabled.

permissionFlags:
  breakBlocks:
    # The deny message can be specified for each flag, but it must be separate
    # from each "for" entry for the flag.
    # If you don't provide a deny message here, the one from your
    # "messages.json" will be shown instead.
    - denyMessage: '&cYou cannot break &e%%TARGET%%&c in &e%%OWNER%%&c''s chunks'
    # Protection map (for example with multiple, see the "containers" flag):
    - for: BLOCKS
      # For blocks, type can be BREAK, PLACE, INTERACT, or EXPLODE
      # If no `include` is present, the default is to include all
      # blocks/entities.
      # If only `include` is present, only the provided
      # entities/entity classes will be included.
      # Similarly, `exclude` includes all default blocks/items and
      # excludes the provided ones.
      # If both are provided, exclusions are processed FIRST and then
      # inclusions.
      type: BREAK
  placeBlocks:
    - denyMessage: '&cYou cannot place &e%%TARGET%%&c in &e%%OWNER%%&c''s chunks'
    - for: BLOCKS
      type: PLACE
  interactBlocks:
    - denyMessage: '&cYou cannot interact with &e%%TARGET%%&c in &e%%OWNER%%&c''s chunks'
    - for: BLOCKS
      type: INTERACT
      # Handle these separately.
      # Note: @CONTAINER blocks are covered by the `containers` flag towards
      # the bottom.
      exclude: ['@REDSTONE', '@DOORS', '@CONTAINER']
  redstone:
    - denyMessage: '&cYou cannot interact with redstone blocks in &e%%OWNER%%&c''s chunks'
    - for: BLOCKS
      type: INTERACT
      include: ['@REDSTONE']
  doors:
    - denyMessage: '&cYou cannot interact with doors in &e%%OWNER%%&c''s chunks'
    - for: BLOCKS
      type: INTERACT
      include: ['@DOORS']

  # Entities
  damageEntities:
    - denyMessage: '&cYou cannot damage &e%%TARGET%%&c in &e%%OWNER%%&c''s chunks'
    - for: ENTITIES
      # Entities can have DAMAGE, INTERACT, and EXPLODE protection types
      type: DAMAGE
  interactEntities:
    - denyMessage: '&cYou cannot interact with &e%%TARGET%%&c in &e%%OWNER%%&c''s chunks'
    - for: ENTITIES
      type: INTERACT
      # Handle container entities with container blocks in the `containers` flag
      exclude: ['@VEHICLES', '@CONTAINER_ENTITIES']
  vehicles:
    - denyMessage: '&cYou cannot use vehicles in &e%%OWNER%%&c''s chunks'
    - for: ENTITIES
      type: INTERACT
      include: ['@VEHICLES']
  # In this example, when `disablePvp` is enabled, protection is enabled,
  # unlike the other flags.
  disablePvp:
    - denyMessage: '&cPVP is disabled in &e%%OWNER%%&c''s chunks'
    # PVP is unique, set the `for` to `PLAYERS`:
    - for: PLAYERS
      protectWhen: ENABLED
  # Ender pearls are another unique target
  disablePearl:
    - denyMessage: '&cEnder pearls are disabled in &e%%OWNER%%&c''s chunks'
    - for: PEARLS
      protectWhen: ENABLED

  # Can also handle multiple types with one flag
  containers:
    - denyMessage: '&cYou cannot use containers in &e%%OWNER%%&c''s chunks'
    - for: BLOCKS
      type: INTERACT
      include: ['@CONTAINER']
    - for: ENTITIES
      type: INTERACT
      include: ['@CONTAINER_ENTITIES']

  # Explosions
  explodeHurt:
    - for: ENTITIES
      type: EXPLODE
      # Handle hanging entities as if they're "blocks"
      exclude: ['@HANGING_ENTITIES']
  explodeDamage:
    - for: BLOCKS
      type: EXPLODE
    - for: ENTITIES
      type: EXPLODE
      # Handle hanging items here
      include: ['@HANGING_ENTITIES']
